<?xml version="1.0" encoding="UTF-8" standalone="yes"?><danepracy><studiauczelnia>Uniwersytet Gdański</studiauczelnia><studiawydzial>Wydział Matematyki, Fizyki i Informatyki</studiawydzial><studiakierunek>Informatyka</studiakierunek><studiatryb>niestacjonarne zaoczne</studiatryb><studentimie>Kamil</studentimie><studentnazwisko>Pek</studentnazwisko><studentalbum>231050</studentalbum><pracaopiekun>dr Włodzimierz Bzyl</pracaopiekun><pracaprowadzacy>dr Włodzimierz Bzyl</pracaprowadzacy><pracatytul>TrainCMS - system zarządzania treścią witryny internetowej</pracatytul><pracadziedzina>11.3|Informatyka</pracadziedzina><pracarok>2017</pracarok><pracadatazlozenia>27-05-2017</pracadatazlozenia><pracastreszczenie>W pracy przedstawiono wersję deweloperską systemu zarządzania treścią witryny internetowej „TrainCMS” opartą na technologii języka Ruby wraz z użyciem platformy programistycznej Ruby On Rails. Do roli systemu zarządzania bazą danych użyto PostgreSQL.&#xD;
Opracowana aplikacja pozwala uruchomić w niedługim czasie własną witrynę internetową w trzech możliwych konfiguracjach: strona wizytówka, katalog realizacji oraz serwis informacyjny.&#xD;
W części teoretycznej opisane zostały prace nad założeniami mającymi na celu stworzenie systemu zarządzania treścią oraz porównano stworzony projekt z potentatami na rynku tychże systemów. Zaprezentowano diagramy obrazujące schemat i architekturę całego systemu. Osadzono ilustracje projektów interfejsu dla administratora, redaktora oraz gościa.&#xD;
W części poświęconej szczegółom implementacji przedstawiono kolejne etapy integracji poszczególnych dodatków jakie oferuje framework Ruby On Rails. Opisano jak w trakcie pracy zaimplementowano publikowanie artykułów i ich kategoryzację, wyświetlanie listy kategorii artykułów na pasku nawigacji oraz kanał RSS. Opisano jak zaimplementowany został kalendarz wydarzeń, jak stworzono User Interface, który wyświetla wszystkie artykuły na stronie głównej, niezależnie od kategorii w kolejności malejącej od daty dodania. Omówiono jak do artykułów i wydarzeń w kalendarzu zaimplementowano możliwość załączania ilustracji oraz dodawania komentarzy i ich oceniania. Opisano implementację podglądu szczegółowych statystyk dostępnych dla zalogowanego użytkownika oraz jak zaimplementowano panel administratora służący do zarządzania artykułami, kategoriami, komentarzami, tagami, użytkownikami i kalendarzem wydarzeń oraz zakładkami i komponentami strony głównej.&#xD;
W zakończeniu podsumowano wyniki prac oraz zaprezentowano możliwości rozwoju systemu.&#xD;
Przy implementacji użyto najnowsze wersje technologii Ruby, Ruby on Rails, PostgreSQL, ZURB Foundation, jQuery Turbolinks, Plataformatec Devise, CarrierWave, RMagick, reCAPTCHA, CKEditor, Chartkick, Prawn, RSS, rQRcode, Geocoder.&#xD;
Projekt wdrożono w serwisie heroku.com i udostępniono pod adresem: https://traincms.herokuapp.com/.&#xD;
Kod źródłowy dostępny jest w serwisie github.com pod adresem: https://github.com/kamilpek/traincms/.</pracastreszczenie><pracaslowakluczowe>cms, ruby on rails, calendar, comments, tags, rss, pdf, qr, geocoding</pracaslowakluczowe><pracaspistresci>1. Wprowadzenie&#xD;
1. Wstęp i opis problemu&#xD;
   1. Porównanie dostępnych rozwiązań z systemem TrainCMS&#xD;
      1. Joomla&#xD;
      1. WordPress&#xD;
   1. Możliwości zastosowania praktycznego&#xD;
      1. strona wizytówka&#xD;
      1. internetowe portfolio&#xD;
      1. serwis informacyjny&#xD;
1. Projekt i analiza&#xD;
   1. Diagram związków encji&#xD;
   1. Diagram kontrolera danych&#xD;
   1. Diagram przypadków użycia&#xD;
   1. Projekt interfejsu użytkownika&#xD;
      1. Panel Administratora&#xD;
      1. Widok Redaktora&#xD;
      1. Widok Gościa&#xD;
1. Implementacja&#xD;
   1. Architektura rozwiązania - Ruby on Rails&#xD;
      1. Artykuły i Kategorie&#xD;
      1. Komentarze&#xD;
      1. Tagi&#xD;
      1. Zakładki&#xD;
      1. Strona Główna&#xD;
      1. Kalendarz wydarzeń            &#xD;
      1. Nawigacja&#xD;
      1. Kanał RSS&#xD;
   1. ZURB Foundation&#xD;
      1. Instalacja&#xD;
      1. Użycie&#xD;
      1. Ikony&#xD;
   1. CarrierWave, CKEditor, Cloudinary&#xD;
      1. CKEditor i Cloudinary&#xD;
      1. CarrierWave&#xD;
   1. Prawn&#xD;
   1. Chartkick&#xD;
   1. reCAPTCHA&#xD;
   1. deivse&#xD;
   1. rQRcode i Prawn/QRCode&#xD;
   1. geocoder&#xD;
   1. cookies_eu&#xD;
1. Bibliografia&#xD;
1. Zakończenie&#xD;
1. Spis rysunków&#xD;
1. Spis kodów źródłowych&#xD;
1. Płyta CD z plikami pracy licencjackiej&#xD;
1. Płyta CD z kodem źródłowym projektu&#xD;
1. Oświadczenie</pracaspistresci></danepracy>